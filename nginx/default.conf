
upstream nginx_rev_proxy {
    server  localhost:8080;
}

upstream auth_proxy {
    server  localhost:6001;
}

upstream socket_io {
    ip_hash;
    server localhost:6001;
    server localhost:6002;
    server localhost:6003;
    server localhost:6004;
    server localhost:6005;
}

server {

    listen 80;
    listen [::]:80; 
    server_name example.co www.example.co;  

    return 302 https://$server_name$request_uri;

}

server {
    listen                          443 ssl;

    ssl                             on;
    server_name                     example.co www.example.co;

    ssl_certificate                 /etc/letsencrypt/live/example.co/fullchain.pem;
    ssl_certificate_key             /etc/letsencrypt/live/example.co/privkey.pem;

    include                         /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam                     /etc/letsencrypt/ssl-dhparams.pem;

    keepalive_timeout               60;
    ssl_session_cache               shared:SSL:10m;

    large_client_header_buffers     8 32k;

    location / {
        
        proxy_pass                  http://nginx_rev_proxy;
        proxy_next_upstream         error timeout invalid_header http_500 http_502 http_504;
        proxy_redirect              off;
        proxy_buffering             off;

        proxy_set_header            Host                    $host;
        proxy_set_header            X-Real-IP               $remote_addr;
        proxy_set_header            X-Forwarded-For         $proxy_add_x_forwarded_for;
        proxy_set_header            X-Forwarded-Proto       $https;
        add_header                  Front-End-Https         on;

    }

    error_page 404  /404.html;
    location = /404.html {
        root   /usr/share/nginx/html;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location /auth/ {

        proxy_pass                  http://auth_proxy;
        proxy_redirect              off;

        proxy_http_version          1.1;

        proxy_set_header            Upgrade                 $http_upgrade;
        proxy_set_header            Connection              "upgrade";

        proxy_set_header            Host                    $host;
        proxy_set_header            X-Real-IP               $remote_addr;
        proxy_set_header            X-Forwarded-For         $proxy_add_x_forwarded_for;

    }

    location /socket.io/ {
        proxy_pass                  http://socket_io;
        proxy_redirect              off;

        proxy_http_version          1.1;

        proxy_set_header            Upgrade                 $http_upgrade;
        proxy_set_header            Connection              "upgrade";

        proxy_set_header            Host                    $host;
        proxy_set_header            X-Real-IP               $remote_addr;
        proxy_set_header            X-Forwarded-For         $proxy_add_x_forwarded_for;

    }

}
